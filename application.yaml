AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Cerberus Healthcheck
Parameters:
  CerberusUrl:
    Type: String
    Description: The url for the cerberus environment
  SwaggerS3Uri:
    Type: String
    Description: The bucket for the swagger definition
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: !Ref SwaggerS3Uri
      StageName: Prod
      Variables:
        # NOTE: Before using this template, replace the <<region>> and <<account>> fields
        #       in Lambda integration URI in the swagger file to region and accountId
        #       you are deploying to
        LambdaFunctionName: !Ref LambdaFunction
  CerberusCrossRegionBackupFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs4.3
      Timeout: 60
      Role: !GetAtt LabmdaRole.Arn
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          ROLE_NAME: !Ref LabmdaRole
          ACCOUNT_ID: !Ref AWS::AccountId
          REGION: !Ref AWS::Region
          CERBERUS_URL: !Ref CerberusUrl
  LabmdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "logs-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        -
          PolicyName: "cerberus-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - kms:Decrypt
                Resource: "*"
Outputs:
  HealthcheckRoleArn:
    !GetAtt LabmdaRole.Arn
  ApiUrl:
    Value: !Join
      - ''
      - - https://
        - !Ref ServerlessRestApi
        - '.execute-api.'
        - !Ref AWS::Region
        - '.amazonaws.com/Prod'
        - '/healthcheck'